// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.mgr.domain;

import com.ruyicai.mgr.domain.Tuserinfo;
import java.lang.String;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Tuserinfo_Roo_Entity {
    
    declare @type: Tuserinfo: @Entity;
    
    declare @type: Tuserinfo: @Table(name = "TUSERINFO", schema = "JRTSCH");
    
    @PersistenceContext(unitName = "persistenceUnit")
    transient EntityManager Tuserinfo.entityManager;
    
    @Transactional
    public void Tuserinfo.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Tuserinfo attached = Tuserinfo.findTuserinfo(this.userno);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Tuserinfo.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Tuserinfo.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    public static final EntityManager Tuserinfo.entityManager() {
        EntityManager em = new Tuserinfo().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Tuserinfo.countTuserinfoes() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Tuserinfo o", Long.class).getSingleResult();
    }
    
    public static List<Tuserinfo> Tuserinfo.findAllTuserinfoes() {
        return entityManager().createQuery("SELECT o FROM Tuserinfo o", Tuserinfo.class).getResultList();
    }
    
    public static Tuserinfo Tuserinfo.findTuserinfo(String userno) {
        if (userno == null || userno.length() == 0) return null;
        return entityManager().find(Tuserinfo.class, userno);
    }
    
    public static List<Tuserinfo> Tuserinfo.findTuserinfoEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Tuserinfo o", Tuserinfo.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
