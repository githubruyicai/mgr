// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.mgr.domain;

import com.ruyicai.mgr.domain.Txianhao;
import java.math.BigDecimal;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Txianhao_Roo_Entity {
    
    declare @type: Txianhao: @Entity;
    
    declare @type: Txianhao: @Table(name = "TXIANHAO", schema = "JRTSCH");
    
    @PersistenceContext(unitName = "persistenceUnit")
    transient EntityManager Txianhao.entityManager;
    
    @Transactional
    public void Txianhao.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Txianhao.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Txianhao attached = Txianhao.findTxianhao(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Txianhao.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Txianhao.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Txianhao Txianhao.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Txianhao merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Txianhao.entityManager() {
        EntityManager em = new Txianhao().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Txianhao.countTxianhaos() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Txianhao o", Long.class).getSingleResult();
    }
    
    public static List<Txianhao> Txianhao.findAllTxianhaos() {
        return entityManager().createQuery("SELECT o FROM Txianhao o", Txianhao.class).getResultList();
    }
    
    public static Txianhao Txianhao.findTxianhao(BigDecimal id) {
        if (id == null) return null;
        return entityManager().find(Txianhao.class, id);
    }
    
    public static List<Txianhao> Txianhao.findTxianhaoEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Txianhao o", Txianhao.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
