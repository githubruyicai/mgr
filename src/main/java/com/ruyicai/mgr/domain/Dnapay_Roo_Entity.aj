// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.mgr.domain;

import com.ruyicai.mgr.domain.Dnapay;
import java.lang.String;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Dnapay_Roo_Entity {
    
    declare @type: Dnapay: @Table(name = "DNAPAY");
    
    @PersistenceContext(unitName = "persistenceUnit")
    transient EntityManager Dnapay.entityManager;
    
    @Transactional
    public void Dnapay.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Dnapay.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Dnapay attached = Dnapay.findDnapay(this.transactionid);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Dnapay.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Dnapay.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Dnapay Dnapay.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Dnapay merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Dnapay.entityManager() {
        EntityManager em = new Dnapay().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Dnapay.countDnapays() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Dnapay o", Long.class).getSingleResult();
    }
    
    public static List<Dnapay> Dnapay.findAllDnapays() {
        return entityManager().createQuery("SELECT o FROM Dnapay o", Dnapay.class).getResultList();
    }
    
    public static Dnapay Dnapay.findDnapay(String transactionid) {
        if (transactionid == null || transactionid.length() == 0) return null;
        return entityManager().find(Dnapay.class, transactionid);
    }
    
    public static List<Dnapay> Dnapay.findDnapayEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Dnapay o", Dnapay.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
