// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.mgr.domain;

import com.ruyicai.mgr.domain.Tdnabind;
import java.lang.String;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Tdnabind_Roo_Entity {
    
    declare @type: Tdnabind: @Entity;
    
    declare @type: Tdnabind: @Table(name = "TDNABIND", schema = "JRTSCH");
    
    @PersistenceContext(unitName = "persistenceUnit")
    transient EntityManager Tdnabind.entityManager;
    
    @Transactional
    public void Tdnabind.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Tdnabind.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Tdnabind attached = Tdnabind.findTdnabind(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Tdnabind.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Tdnabind.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Tdnabind Tdnabind.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Tdnabind merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Tdnabind.entityManager() {
        EntityManager em = new Tdnabind().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Tdnabind.countTdnabinds() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Tdnabind o", Long.class).getSingleResult();
    }
    
    public static List<Tdnabind> Tdnabind.findAllTdnabinds() {
        return entityManager().createQuery("SELECT o FROM Tdnabind o", Tdnabind.class).getResultList();
    }
    
    public static Tdnabind Tdnabind.findTdnabind(String id) {
        if (id == null || id.length() == 0) return null;
        return entityManager().find(Tdnabind.class, id);
    }
    
    public static List<Tdnabind> Tdnabind.findTdnabindEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Tdnabind o", Tdnabind.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
