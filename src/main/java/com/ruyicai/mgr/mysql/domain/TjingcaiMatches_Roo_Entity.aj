// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.mgr.mysql.domain;

import com.ruyicai.mgr.mysql.domain.MatchesCompositePK;
import com.ruyicai.mgr.mysql.domain.TjingcaiMatches;
import java.util.List;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TjingcaiMatches_Roo_Entity {
    
    declare @type: TjingcaiMatches: @Entity;
    
    declare @type: TjingcaiMatches: @Table(name = "tjingcaimatches");
    
    @PersistenceContext(unitName = "clientPersistenceUnit")
    transient EntityManager TjingcaiMatches.entityManager;
    
    @EmbeddedId
    private MatchesCompositePK TjingcaiMatches.id;
    
    public MatchesCompositePK TjingcaiMatches.getId() {
        return this.id;
    }
    
    public void TjingcaiMatches.setId(MatchesCompositePK id) {
        this.id = id;
    }
    
    @Transactional("newsTransactionManager")
    public void TjingcaiMatches.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional("newsTransactionManager")
    public void TjingcaiMatches.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            TjingcaiMatches attached = TjingcaiMatches.findTjingcaiMatches(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional("newsTransactionManager")
    public void TjingcaiMatches.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional("newsTransactionManager")
    public void TjingcaiMatches.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional("newsTransactionManager")
    public TjingcaiMatches TjingcaiMatches.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        TjingcaiMatches merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager TjingcaiMatches.entityManager() {
        EntityManager em = new TjingcaiMatches().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long TjingcaiMatches.countTjingcaiMatcheses() {
        return entityManager().createQuery("SELECT COUNT(o) FROM TjingcaiMatches o", Long.class).getSingleResult();
    }
    
    public static List<TjingcaiMatches> TjingcaiMatches.findAllTjingcaiMatcheses() {
        return entityManager().createQuery("SELECT o FROM TjingcaiMatches o", TjingcaiMatches.class).getResultList();
    }
    
    public static TjingcaiMatches TjingcaiMatches.findTjingcaiMatches(MatchesCompositePK id) {
        if (id == null) return null;
        return entityManager().find(TjingcaiMatches.class, id);
    }
    
    public static List<TjingcaiMatches> TjingcaiMatches.findTjingcaiMatchesEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM TjingcaiMatches o", TjingcaiMatches.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
