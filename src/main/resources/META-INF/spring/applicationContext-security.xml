<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Application context containing authentication, channel
  - security and web URI beans.
  -
  - Only used by "filter" artifact.
  -
  -->

<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

     <global-method-security pre-post-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>


	<!-- 设置CAS切入点与f i l e t r -->
	<http auto-config="false" entry-point-ref="casEntryPoint" use-expressions="true" >
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<!--<intercept-url pattern="/**" access="permitAll"/>
		
     	--><custom-filter position="CAS_FILTER" ref="casFilter"/>
     	<custom-filter before="LOGOUT_FILTER" ref="requestSingleLogoutFilter"/>                              
		<custom-filter before="CAS_FILTER" ref="singleLogoutFilter"/> 
	</http>
	
	<!-- 声明cas服务器端登录的地址，此处写IP或主机名均可不使用http的自动配置。
	*entry-point-ref="casEntryPoint"作用是认证的入口，是一个实现AuthenticationEntryPoint接口的类。为ExceptionTranslationFilter类提供认证依据。-->
	<b:bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<b:property name="loginUrl" value="${loginCASUrl}/login"/>
		<b:property name="serviceProperties" ref="serviceProperties"/>
	</b:bean>
	<b:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
	    <b:property name="service"  value="${this.Url}/j_spring_cas_security_check"/>
		<b:property name="sendRenew" value="false"/>
	</b:bean>
	
	<b:bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<b:property name="authenticationManager" ref="casAuthenticationManager"/>	                 	
		<b:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</b:bean>
	
	<!-- cas 认证成功控制器  --> 
	<b:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">  
		<b:property name="alwaysUseDefaultTargetUrl"   value="true"/>
		<b:property name="defaultTargetUrl" value="/index.jsp" />  
	</b:bean>
	<!-- cas 认证失败控制器 -->
	<b:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<b:property name="defaultFailureUrl" value="/index.jsp" />
	</b:bean>
	
	<!-- 在认证管理器中注册cas认证提供器 -->
	<authentication-manager alias="casAuthenticationManager">
		<authentication-provider ref="casAuthenticationProvider" user-service-ref="userService"/>
	</authentication-manager>

	<!-- cas认证提供器，定义客户端的验证方式 -->
	<!-- 客户端只验证用户名是否合法 -->
	<b:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<b:property name="userDetailsService" ref="userService"/>
		<b:property name="serviceProperties" ref="serviceProperties" />
		<b:property name="ticketValidator">
		<b:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
		<!-- 此处必须写主机名或域名，不能写IP且注意此处的地址不能加login.jsp -->
			<b:constructor-arg index="0" value="${loginCASUrl-renzheng}" />
			</b:bean>
		</b:property>
		<b:property name="key" value="an_id_for_this_auth_provider_only"/>
	</b:bean>
	<!-- 注销客户端 -->
	<b:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
	<!-- 注销服务器 -->
	<b:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter" >
		<b:constructor-arg value="${loginCASUrl}/logout?service=${this.Url}" />  
		<b:constructor-arg>
			<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</b:constructor-arg>
		<b:property name="filterProcessesUrl" value="/j_spring_security_logout" />
    </b:bean>
	
	<!-- <user-service id="userService">
		<user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMINISTRATOR,ROLE_SUPERVISOR" />
	</user-service>-->
	<!--   -->
	<jdbc-user-service id="userService" data-source-ref="dataSource"
	users-by-username-query="select NICKNAME username ,PWD password ,'1' enabled  from TLOGUSER where NICKNAME=? and STATE=1"
	 authorities-by-username-query="select NICKNAME username ,'ROLE_USER'  from TLOGUSER where NICKNAME=?" /> 
	
	<!-- 指定中文资源 --> 
     <b:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
     	<b:property name="basename"  value="classpath:org/springframework/security/messages_zh_CN"/>  
   	</b:bean>
	
	
 <!-- <http use-expressions="true">
        <intercept-url pattern="/secure/extreme/**" access="hasRole('ROLE_SUPERVISOR')"/>
        <intercept-url pattern="/secure/**" access="isAuthenticated()" />
        Disable web URI authorization, as we're using <global-method-security> and have @Secured the services layer instead
        <intercept-url pattern="/listAccounts.html" access="isRememberMe()" />
        <intercept-url pattern="/post.html" access="hasRole('ROLE_TELLER')" />
       
        <intercept-url pattern="/**" access="permitAll" />
        <form-login />
        <logout />
        <remember-me />

    Uncomment to enable X509 client authentication support
        <x509 />

        Uncomment to limit the number of sessions a user can have
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>

    </http> -->

    <!--
    Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
        peter/opal
    -->
   <!--  <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"/>
            <user-service>
                <user name="rod" password="a564de63c2d0da68cf47586ee05984d7" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
                <user name="dianne" password="65d15fe9156f9c4bbffd98085992a44e" authorities="ROLE_USER,ROLE_TELLER" />
                <user name="scott" password="2b58af6dddbd072ed27ffc86725d7d3a" authorities="ROLE_USER" />
                <user name="peter" password="22b5c9accc6e1ba628cedc63a72d57f8" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager> -->

</b:beans>
